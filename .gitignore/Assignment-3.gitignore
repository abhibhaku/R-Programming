# R-Programming - Assignment 3

## Download the file ProgAssignment3-data.zip file containing the data for Programming Assignment 3 from the Coursera web site. Unzip the file in a directory that will serve as your working directory. When you start up R make sure to change your working directory to the directory where you unzipped the data.

## The zip file for this assignment contains three files:

## outcome-of-care-measures.csv: Contains information about 30-day mortality and readmission rates for heart attacks, heart failure, and pneumonia for over 4,000 hospitals
## hospital-data.csv: Contains information about each hospital
## Hospital_Revised_Flatfiles.pdf: Descriptions of the variables in each file (i.e the code book)

## setting current working directory

setwd("D:/ISB Co 2018/Coursera/Data Science Specialization/R-Programming")

## unzipping the downloaded data file and saving in current working directory

hospitalzip = "D:/ISB Co 2018/Coursera/Data Science Specialization/R-Programming/rprog%2Fdata%2FProgAssignment3-data.zip"

unzip(hospitalzip)

#  R-Prog-Assignment 3 - 1 Plot the 30-day mortality rates for heart attack

## Read the outcome data into R via the read.csv function and look at the first few rows.

outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")

head(outcome)

## a simple histogram of the 30-day death rates from heart attack (column 11 in the outcome dataset)

outcome[, 11] <- as.numeric(outcome[, 11])

hist(outcome[, 11])

# R-Prog-Assignment 3 - 2 Finding the best hospital in a state

## Write a function called best that take two arguments: the 2-character abbreviated name of a state and an outcome name. The function reads the outcome-of-care-measures.csv file and returns a character vector with the name of the hospital that has the best (i.e. lowest) 30-day mortality for the specified outcome in that state. The hospital name is the name provided in the Hospital.Name variable. The outcomes can be one of "heart attack", "heart failure", or "pneumonia". Hospitals that do not have data on a particular outcome should be excluded from the set of hospitals when deciding the rankings. 

best <- function(state,outcome) {
  
  ## Read outcome data into a separate data frame
  
  ofcm <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
  ocm <- data.frame(cbind(ofcm[,2],   # hospital name
                          ofcm[,7],   # State
                          ofcm[,11],  # heart attack
                          ofcm[,17],  # heart failure
                          ofcm[,23])) # pneumonia
  
  
  colnames(ocm) <- c("hospital","State","heart attack","heart failure","pneumonia")
  
  ## Check that state and outcome are valid
  
  if (!(any(state == ocm$State))) {
  stop("invalid state")
  }
  else if (!(any(outcome == c("heart attack","heart failure","pneumonia")))){
  stop("invalid outcome")}
  
  else{ 
  
  ## Return hospital name in that state with lowest 30-day death rate  
  
  ocm1 <- subset(ocm,State == state)
  ocm1[] <- lapply(ocm1,as.character) 
  
  if(outcome == "heart attack") {i <-3}
  else if(outcome == "heart failure") {i <-4}
  else {i <-5}
  
  m1 <- as.numeric((ocm1[,i]))
  min1 <- min(m1,na.rm = TRUE)
  rowmin <- which(m1 == min1)
  h <- ocm1[rowmin,1]
  h <- sort(h)
  return(h[1])
  }
}

# Sample Output

# > source("best.R")
# > best("TX", "heart attack")
# [1] "CYPRESS FAIRBANKS MEDICAL CENTER"
# > best("TX", "heart failure")
# [1] "FORT DUNCAN MEDICAL CENTER"
# > best("MD", "heart attack")
# [1] "JOHNS HOPKINS HOSPITAL, THE"
# > best("MD", "pneumonia")
# [1] "GREATER BALTIMORE MEDICAL CENTER"
# > best("BB", "heart attack")
# Error in best("BB", "heart attack") : invalid state
# > best("NY", "hert attack")
# Error in best("NY", "hert attack") : invalid outcome

# R-Prog-Assignment 3 - 3 Ranking hospitals by outcome in a state

## Write a function called rankhospital() that takes THREE (3) arguments: (a) the TWO(2)-character abbreviated name of a state (state); (b) an outcome (outcome); and Â© the ranking of a hospital in that state for that outcome (num). The function reads the outcome-of-care-measures.csv file and returns a character vector with the name of the hospital that has the ranking specified by the num argument.

rankhospital <- function(state, outcome, num = "best") {
  
    ## Read outcome data into a separate data frame
    
    ofcm <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
    ocm <- data.frame(cbind(ofcm[,2],   # hospital name
                            ofcm[,7],   # State
                            ofcm[,11],  # heart attack
                            ofcm[,17],  # heart failure
                            ofcm[,23])) # pneumonia
    
    
    colnames(ocm) <- c("hospital","State","heart attack","heart failure","pneumonia")
    
    ## Check that state and outcome are valid
    
    if (!(any(state == ocm$State))) {
      stop("invalid state")
    }
    else if (!(any(outcome == c("heart attack","heart failure","pneumonia")))){
      stop("invalid outcome")}
    
    else  { 
      
      ## Return hospital name in that state with the given rank 30-day death rate  
      
      ocm1 <- subset(ocm,State == state)
      ocm1[] <- lapply(ocm1,as.character) 
      
      if(outcome == "heart attack") {
      ocm1 <- ocm1[ocm1$`heart attack` != 'Not Available', ]
      ocm2 <- ocm1[order(as.numeric(ocm1$`heart attack`),ocm1$hospital),]
      }
      else if(outcome == "heart failure") {
      ocm1 <- ocm1[ocm1$`heart failure` != 'Not Available', ]
      ocm2 <- ocm1[order(as.numeric(ocm1$`heart failure`),ocm1$hospital),]
      }
      else {
      ocm1 <- ocm1[ocm1$pneumonia != 'Not Available', ]
      ocm2 <- ocm1[order(as.numeric(ocm1$pneumonia),ocm1$hospital),]
      }

      if (num == "best"){
        h <- ocm2[1,1]
        return(h[1])
      }
      else if(num == "worst"){
        print(nrow(ocm2))
        h <- ocm2[nrow(ocm2),1]
        return(h[1])}
      
      else if (num > nrow(ocm2)){
        return(NA)}
        
        else{
        h <- ocm2[num,1]
        return(h[1])}
      }
    }
  
# Sample Output

# > source("rankhospital.R")
# > rankhospital("TX", "heart failure", 4)
# [1] "DETAR HOSPITAL NAVARRO"
# > rankhospital("MD", "heart attack", "worst")
# [1] "HARFORD MEMORIAL HOSPITAL"
# > rankhospital("MN", "heart attack", 5000)
# [1] NA

# R-Prog-Assingment 3 - 4 Ranking hospitals in all states

## Write a function called rankall() that takes TWO (2) arguments: (a) an outcome name (outcome); and (b) a hospital ranking (num). The function reads the outcome-of-care-measures.csv file and returns a TWO(2)-column data frame containing the hospital in EACH state that has the ranking specified in num. For example the function call rankall("heart attack", "best") would return a data frame containing the names of the hospitals that are the best in their respective states for THIRTY(30)-day heart attack death rates. The function should return a value for EVERY state (some may be NA). The FIRST (1st) column in the data frame is named hospital, which contains the hospital name, and the SECOND (2nd) column is named state, which contains the TWO(2)-character abbreviation for the state name.

rankall <- function(outcome, num = "best") {
  
    ## Read outcome data into a separate data frame
    
    ofcm <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
    ocm <- data.frame(cbind(ofcm[,2],   # hospital name
                            ofcm[,7],   # State
                            ofcm[,11],  # heart attack
                            ofcm[,17],  # heart failure
                            ofcm[,23])) # pneumonia
    
    state_list <<- unique(ofcm[,7])
    state_list <- sort(state_list)
    i <-1
    result <<- data.frame(length(state_list),2)
    
    colnames(ocm) <- c("hospital","State","heart attack","heart failure","pneumonia")
    
    ## Check that outcome is valid
    
    if (!(any(outcome == c("heart attack","heart failure","pneumonia")))){
      stop("invalid outcome")}
    
    else  { 
      
      ## For each state, find the hospital of the given rank 
      
      for (state in state_list)      {
      
      ocm1 <- subset(ocm, State == state)
      ocm1[] <- lapply(ocm1,as.character) 
      
      if(outcome == "heart attack") {
      ocm1 <- ocm1[ocm1$`heart attack` != 'Not Available', ]
      ocm2 <- ocm1[order(as.numeric(ocm1$`heart attack`),ocm1$hospital),]
      }
      else if(outcome == "heart failure") {
      ocm1 <- ocm1[ocm1$`heart failure` != 'Not Available', ]
      ocm2 <- ocm1[order(as.numeric(ocm1$`heart failure`),ocm1$hospital),]
      }
      else {
      ocm1 <- ocm1[ocm1$pneumonia != 'Not Available', ]
      ocm2 <- ocm1[order(as.numeric(ocm1$pneumonia),ocm1$hospital),]
      }

      if (num == "best"){
        result[i,1] <- ocm2[1,1]
        result[i,2] <- state
        i = i+1
        }
      else if(num == "worst"){
        result[i,1] <- ocm2[nrow(ocm2),1]
        result[i,2] <- state
        i = i+1
        }
     
      else{
        result[i,1] <- ocm2[num,1]
        result[i,2] <- state
        i<- i+1
      }
}
      colnames(result) <- c("hospital","State")
      return(result)
    }
}
  
# Sample Output

# > source("rankall.R")
# > head(rankall("heart attack", 20), 10)
                              hospital State
# 1                                 <NA>    AK
# 2       D W MCMILLAN MEMORIAL HOSPITAL    AL
# 3    ARKANSAS METHODIST MEDICAL CENTER    AR
# 4  JOHN C LINCOLN DEER VALLEY HOSPITAL    AZ
# 5                SHERMAN OAKS HOSPITAL    CA
# 6             SKY RIDGE MEDICAL CENTER    CO
# 7              MIDSTATE MEDICAL CENTER    CT
# 8                                 <NA>    DC
# 9                                 <NA>    DE
# 10      SOUTH FLORIDA BAPTIST HOSPITAL    FL
# > tail(rankall("pneumonia", "worst"), 3)
                                     hospital State
# 52 MAYO CLINIC HEALTH SYSTEM - NORTHLAND, INC    WI
# 53                     PLATEAU MEDICAL CENTER    WV
# 54           NORTH BIG HORN HOSPITAL DISTRICT    WY

# tail(rankall("heart failure"), 10)
#                                                             hospital State
# 45                         WELLMONT HAWKINS COUNTY MEMORIAL HOSPITAL    TN
# 46                                        FORT DUNCAN MEDICAL CENTER    TX
# 47 VA SALT LAKE CITY HEALTHCARE - GEORGE E. WAHLEN VA MEDICAL CENTER    UT
# 48                                          SENTARA POTOMAC HOSPITAL    VA
# 49                            GOV JUAN F LUIS HOSPITAL & MEDICAL CTR    VI
# 50                                              SPRINGFIELD HOSPITAL    VT
# 51                                         HARBORVIEW MEDICAL CENTER    WA
# 52                                    AURORA ST LUKES MEDICAL CENTER    WI
# 53                                         FAIRMONT GENERAL HOSPITAL    WV
# 54                                        CHEYENNE VA MEDICAL CENTER    WY



  
